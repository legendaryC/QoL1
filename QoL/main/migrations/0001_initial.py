# Generated by Django 2.1.3 on 2020-10-07 21:14

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Albumin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'Albumin',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Alkaline_Phosphatase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'Alkaline_Phosphatase',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Baseline_Survey',
            fields=[
                ('patient_ID', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField()),
                ('mobility', models.IntegerField(null=True)),
                ('self_care', models.IntegerField(null=True)),
                ('usual_activities', models.IntegerField(null=True)),
                ('pain_level', models.IntegerField(null=True)),
                ('anxiety_level', models.IntegerField(null=True)),
                ('health_rating', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'Baseline_Survey',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Bicarbonate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'Bicarbonate',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='BUN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'BUN',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Calcium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'Calcium',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Comorbidities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('diabetes', models.BooleanField()),
                ('hypertension', models.BooleanField()),
                ('cardiovascular_disease', models.BooleanField()),
                ('typhoid', models.BooleanField()),
            ],
            options={
                'db_table': 'Comorbidities',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Creatinine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'Creatinine',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Demography',
            fields=[
                ('user_ID', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField()),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('M', 'M'), ('F', 'F')], max_length=1)),
            ],
            options={
                'db_table': 'Demography',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Dialysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('weight', models.FloatField()),
                ('bp', models.CharField(max_length=6)),
                ('kt_v_ratio', models.FloatField(null=True)),
                ('dialysis_duration', models.DecimalField(decimal_places=2, max_digits=3, null=True)),
            ],
            options={
                'db_table': 'Dialysis',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Hemoglobin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'Hemoglobin',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Medical_Info',
            fields=[
                ('patient_ID', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField()),
                ('ckd', models.IntegerField(null=True)),
                ('first_dialysis_date', models.DateTimeField(null=True)),
                ('number_of_dialysis', models.IntegerField(null=True)),
                ('expected_number_of_dialysis', models.IntegerField(null=True)),
                ('dialysis_frequency', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'Medical_Info',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Phosphorus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'Phosphorus',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Potassium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'Potassium',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='PTH',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'PTH',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Sodium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_ID', models.CharField(max_length=6)),
                ('date_time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'Sodium',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Third_Month_Survey',
            fields=[
                ('patient_ID', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField()),
                ('performance_status_score', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'Third_Month_Survey',
                'ordering': ['-date_time'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='sodium',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='pth',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='potassium',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='phosphorus',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='hemoglobin',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='dialysis',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='creatinine',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='comorbidities',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='calcium',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='bun',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='bicarbonate',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='alkaline_phosphatase',
            unique_together={('patient_ID', 'date_time')},
        ),
        migrations.AlterUniqueTogether(
            name='albumin',
            unique_together={('patient_ID', 'date_time')},
        ),
    ]
